version: '3'

services:

  #users_structures_service:
  #  container_name: users_structures_service
  #  build: ./services/users_structures/
  #  volumes:
  #    - './services/users_structures:/usr/src/app'
  #    - './services/users_structures/package.json:/usr/src/package.json'
  #  ports:
  #    - '3000:3000' # expose ports - HOST:CONTAINER
  #  environment:
  #    - PORT=3000

  products_menus_service:
    container_name: products_menus_service
    build: ./services/products_menus/
    volumes:
      - './services/products_menus:/usr/src/app'
      - './services/products_menus/package.json:/usr/src/package.json'
    ports:
      - '3001:3001' # expose ports - HOST:CONTAINER
    environment:
      - PORT=3001


  products_menus_service2:
    container_name: products_menus_service2
    build: ./services/products_menus/
    volumes:
      - './services/products_menus:/usr/src/app'
      - './services/products_menus/package.json:/usr/src/package.json'
    ports:
      - '3002:3002' # expose ports - HOST:CONTAINER
    environment:
      - PORT=3002

  orders_deliveries_service:
    container_name: orders_deliveries_service
    build: ./services/orders_deliveries/
    volumes:
      - './services/orders_deliveries:/usr/src/app'
      - './services/orders_deliveries/package.json:/usr/src/package.json'
    ports:
      - '3003:3003' # expose ports - HOST:CONTAINER
    environment:
      - PORT=3003


  notifications_service:
    container_name: notifications_service
    build: ./services/notifications/
    volumes:
      - './services/notifications:/usr/src/app'
      - './services/notifications/package.json:/usr/src/package.json'
    ports:
      - '3050:3050' # expose ports - HOST:CONTAINER
    environment:
      - PORT=3050

  swagger_service:
    container_name: swagger_service
    build: ./services/swagger/
    volumes:
      - './services/swagger:/usr/src/app'
      - '/usr/src/app/node_modules'
    ports:
      - '4000:4000' # expose ports - HOST:CONTAINER
    environment:
      - PORT=4000


     
  #kong:
  #  image: kong:latest
  #  volumes:
  #    - ./kong/kong.yml:/usr/local/kong/declarative/kong.yml
  #  environment:
  #    - KONG_DATABASE=off
  #    - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
  #    - KONG_PROXY_ACCESS_LOG=/dev/stdout
  #    - KONG_ADMIN_ACCESS_LOG=/dev/stdout
  #    - KONG_PROXY_ERROR_LOG=/dev/stderr
  #    - KONG_ADMIN_ERROR_LOG=/dev/stderr
  #    - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
  #  ports:
  #    - "8000:8000"
  #    - "8443:8443"
  #    - "127.0.0.1:8001:8001"
  #    - "127.0.0.1:8444:8444"
  #  healthcheck:
  #    test: ["CMD", "curl", "-f", "http://kong:8000"]
  #    interval: 5s
  #    timeout: 2s
  #    retries: 15


  #nginx:
  #  container_name: nginx-proxy
  #  build: ./nginx/
  #  ports:
  #    - '80:80' # expose ports - HOST:CONTAINER
  #  links:
  #    - swagger_service
  #    - users_structures_service
  #    - products_menus_service1
  #    - products_menus_service2
  #    - orders_deliveries_service