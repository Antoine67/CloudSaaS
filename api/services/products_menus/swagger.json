{
	"basePath": "/api",
	"consumes": [
		"application/json"
	],
	"definitions": {
		"IProduct": {
			"description": "Product objects allow merchants to show their available\r\nmeals/dessert/... for sale",
			"properties": {
				"id": {
					"type": "string",
					"description": "Uniq indentifier"
				},
				"name": {
					"type": "string",
					"description": "Name which represent the product"
				},
				"description": {
					"type": "string",
					"description": "Short text describing the product"
				},
				"restaurant_id": {
					"type": "number",
					"format": "double",
					"description": "Restaurant uniq indentifier reference"
				},
				"price": {
					"type": "number",
					"format": "double",
					"description": "Price in euros (€)",
					"x-nullable": true
				},
				"available": {
					"type": "boolean",
					"description": "Is the product currently available ?"
				},
				"ingredients": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"description": "Ingredients list composing product",
					"x-nullable": true
				}
			},
			"required": [
				"id",
				"name",
				"description",
				"restaurant_id",
				"available"
			],
			"type": "object"
		},
		"ProductCreationParams": {
			"description": "Product data for creation",
			"properties": {
				"name": {
					"type": "string",
					"description": "Name which represent the product"
				},
				"description": {
					"type": "string",
					"description": "Short text describing the product"
				},
				"restaurant_id": {
					"type": "number",
					"format": "double",
					"description": "Restaurant uniq indentifier reference"
				},
				"price": {
					"type": "number",
					"format": "double",
					"description": "Price in euros (€)",
					"x-nullable": true
				},
				"available": {
					"type": "boolean",
					"description": "Is the product currently available ?"
				},
				"ingredients": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"description": "Ingredients list composing product",
					"x-nullable": true
				}
			},
			"required": [
				"name",
				"description",
				"restaurant_id",
				"available"
			],
			"type": "object"
		},
		"ProductUpdateParams": {
			"description": "Product data for update",
			"properties": {
				"name": {
					"type": "string",
					"description": "Name which represent the product",
					"x-nullable": true
				},
				"description": {
					"type": "string",
					"description": "Short text describing the product",
					"x-nullable": true
				},
				"restaurant_id": {
					"type": "number",
					"format": "double",
					"description": "Restaurant uniq indentifier reference",
					"x-nullable": true
				},
				"price": {
					"type": "number",
					"format": "double",
					"description": "Price in euros (€)",
					"x-nullable": true
				},
				"available": {
					"type": "boolean",
					"description": "Is the product currently available ?",
					"x-nullable": true
				},
				"ingredients": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"description": "Ingredients list composing product",
					"x-nullable": true
				}
			},
			"type": "object"
		},
		"IMenu": {
			"description": "Menu objects allow merchants to show their available\r\nmenus for sale",
			"properties": {
				"id": {
					"type": "string",
					"description": "Uniq indentifier"
				},
				"name": {
					"type": "string",
					"description": "Name which represent the menu"
				},
				"description": {
					"type": "string",
					"description": "Short text describing the menu"
				},
				"restaurant_id": {
					"type": "number",
					"format": "double",
					"description": "Restaurant uniq indentifier reference"
				},
				"price": {
					"type": "number",
					"format": "double",
					"description": "Price in euros (€)",
					"x-nullable": true
				},
				"available": {
					"type": "boolean",
					"description": "Is the menu currently available ?"
				},
				"products": {
					"type": "object",
					"description": "Products contained on the menu\r\nTODO",
					"x-nullable": true
				}
			},
			"required": [
				"id",
				"name",
				"description",
				"restaurant_id",
				"available"
			],
			"type": "object"
		},
		"MenuCreationParams": {
			"description": "Menu for creation",
			"properties": {
				"name": {
					"type": "string",
					"description": "Name which represent the menu"
				},
				"description": {
					"type": "string",
					"description": "Short text describing the menu"
				},
				"restaurant_id": {
					"type": "number",
					"format": "double",
					"description": "Restaurant uniq indentifier reference"
				},
				"price": {
					"type": "number",
					"format": "double",
					"description": "Price in euros (€)",
					"x-nullable": true
				},
				"available": {
					"type": "boolean",
					"description": "Is the menu currently available ?"
				},
				"products": {
					"type": "object",
					"description": "Products contained on the menu\r\nTODO",
					"x-nullable": true
				}
			},
			"required": [
				"name",
				"description",
				"restaurant_id",
				"available"
			],
			"type": "object"
		},
		"MenuUpdateParams": {
			"description": "Menu for update",
			"properties": {
				"name": {
					"type": "string",
					"description": "Name which represent the menu",
					"x-nullable": true
				},
				"description": {
					"type": "string",
					"description": "Short text describing the menu",
					"x-nullable": true
				},
				"restaurant_id": {
					"type": "number",
					"format": "double",
					"description": "Restaurant uniq indentifier reference",
					"x-nullable": true
				},
				"price": {
					"type": "number",
					"format": "double",
					"description": "Price in euros (€)",
					"x-nullable": true
				},
				"available": {
					"type": "boolean",
					"description": "Is the menu currently available ?",
					"x-nullable": true
				},
				"products": {
					"type": "object",
					"description": "Products contained on the menu\r\nTODO",
					"x-nullable": true
				}
			},
			"type": "object"
		}
	},
	"info": {
		"title": "products_menus_service",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		}
	},
	"paths": {
		"/products": {
			"get": {
				"operationId": "GetAll",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/IProduct"
							}
						}
					}
				},
				"description": "Retrieves all existing products.",
				"summary": "Retrieves all existing products",
				"tags": [
					"Products"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"produces": [
					"application/json"
				],
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Create a new product by supplying new product's data",
				"summary": "Create a new product",
				"tags": [
					"Products"
				],
				"security": [],
				"parameters": [
					{
						"description": "The new product's data",
						"in": "body",
						"name": "requestBody",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ProductCreationParams"
						}
					}
				]
			}
		},
		"/products/{id}": {
			"get": {
				"operationId": "Get",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/IProduct"
						}
					}
				},
				"description": "Retrieves the details of an existing product.\r\nSupply the unique product ID from either and receive corresponding product details.",
				"summary": "Retrieves a specific existing product",
				"tags": [
					"Products"
				],
				"security": [],
				"parameters": [
					{
						"description": "The product's identifier",
						"in": "path",
						"name": "id",
						"required": true,
						"type": "string"
					}
				]
			},
			"put": {
				"operationId": "Update",
				"produces": [
					"application/json"
				],
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Update specific product from the unique product ID you provide in query, with the new data you provide in body.",
				"summary": "Update an existing product",
				"tags": [
					"Products"
				],
				"security": [],
				"parameters": [
					{
						"description": "The product's identifier",
						"in": "path",
						"name": "id",
						"required": true,
						"type": "string"
					},
					{
						"description": "The new product's data",
						"in": "body",
						"name": "requestBody",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ProductUpdateParams"
						}
					}
				]
			},
			"delete": {
				"operationId": "Remove",
				"produces": [
					"application/json"
				],
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Delete a specific product from the unique product ID you provide.",
				"summary": "Delete a product",
				"tags": [
					"Products"
				],
				"security": [],
				"parameters": [
					{
						"description": "The product's identifier",
						"in": "path",
						"name": "id",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/menus": {
			"get": {
				"operationId": "GetAll",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/IMenu"
							}
						}
					}
				},
				"description": "Retrieves all existing menus.",
				"summary": "Retrieves all existing menus",
				"tags": [
					"Menus"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"produces": [
					"application/json"
				],
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Create a new menu by supplying new menu's data",
				"summary": "Create a new menu",
				"tags": [
					"Menus"
				],
				"security": [],
				"parameters": [
					{
						"description": "The new menu's data",
						"in": "body",
						"name": "requestBody",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MenuCreationParams"
						}
					}
				]
			}
		},
		"/menus/{id}": {
			"get": {
				"operationId": "Get",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/IMenu"
						}
					}
				},
				"description": "Retrieves the details of an existing menu.\r\nSupply the unique menu ID from either and receive corresponding menu details.",
				"summary": "Retrieves a specific existing menu",
				"tags": [
					"Menus"
				],
				"security": [],
				"parameters": [
					{
						"description": "The menu's identifier",
						"in": "path",
						"name": "id",
						"required": true,
						"type": "string"
					}
				]
			},
			"put": {
				"operationId": "Update",
				"produces": [
					"application/json"
				],
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Update specific menu from the unique menu ID you provide in query, with the new data you provide in body.",
				"summary": "Update an existing menu",
				"tags": [
					"Menus"
				],
				"security": [],
				"parameters": [
					{
						"description": "The menu's identifier",
						"in": "path",
						"name": "id",
						"required": true,
						"type": "string"
					},
					{
						"description": "The new menu's data",
						"in": "body",
						"name": "requestBody",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MenuUpdateParams"
						}
					}
				]
			},
			"delete": {
				"operationId": "Remove",
				"produces": [
					"application/json"
				],
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Delete a specific menu from the unique menu ID you provide.",
				"summary": "Delete a menu",
				"tags": [
					"Menus"
				],
				"security": [],
				"parameters": [
					{
						"description": "The menu's identifier",
						"in": "path",
						"name": "id",
						"required": true,
						"type": "string"
					}
				]
			}
		}
	},
	"produces": [
		"application/json"
	],
	"swagger": "2.0",
	"securityDefinitions": {},
	"host": "localhost:8080",
	"schemes": [
		"http"
	]
}